{"version":3,"sources":["Components/pairsModal.jsx","Components/organizerPage.jsx","Components/participantPage.jsx","styles/assets/santa-with-beer.png","Components/App.jsx","reportWebVitals.js","index.js"],"names":["PairsModal","show","data","handleClose","useState","showAlert","setShowAlert","useEffect","setTimeout","Modal","onHide","className","centered","Alert","transition","onClick","id","length","map","el","i","name","navigator","clipboard","writeText","url","OrganizerPage","pairs","setPairs","setName","preferance","setPreferance","showModal","setShowModal","generatedPairs","setGeneratedPairs","generateUrl","pairToken","window","location","href","shuffle","arr","randomIndex","copy","cloneDeep","currentIndex","Math","floor","random","pair","tempArr","splice","onSubmit","e","preventDefault","pairsCopy","push","handleSubmit","onChange","currentTarget","value","placeholder","type","shuffledPairs","submitPairs","forEach","encode","ParticipantPage","participantObj","setParticipantObj","str","search","objURL","replace","RegExp","$0","$1","$2","$3","decoded","decode","participantName","split","App","Array","_","alt","src","santaImg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.666f428c.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport CsvDownload from \"react-json-to-csv\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nconst PairsModal = ({ show, data, handleClose }) => {\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (showAlert) {\r\n      setTimeout(() => setShowAlert(false), 3000);\r\n    }\r\n  }, [showAlert]);\r\n  return (\r\n    <Modal show={show} onHide={handleClose} className=\"pairs-modal\" centered>\r\n      <Alert className=\"copy-alert\" show={showAlert} transition>\r\n        Copied!\r\n      </Alert>\r\n      {!showAlert && <div className=\"alert-placeholder\" />}\r\n      <button className=\"modal-close\" onClick={handleClose}>\r\n        X\r\n      </button>\r\n      <h2>Generated Pairs!</h2>\r\n      <div id=\"pairs-data\">\r\n        {data.length !== 0 &&\r\n          data.map((el, i) => (\r\n            <div className=\"pair-container\" key={`generated-pair-${i}`}>\r\n              <h3>{el.name}</h3>\r\n              <button\r\n                onClick={() => {\r\n                  navigator.clipboard.writeText(el.url);\r\n                  setShowAlert(true);\r\n                }}\r\n              >\r\n                Copy Url\r\n              </button>\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <CsvDownload id=\"csv-button\" data={data} />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PairsModal;\r\n","import * as encode from \"jwt-encode\";\r\n\r\nimport PairsModal from \"./pairsModal\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\nimport { useState } from \"react\";\r\n\r\nconst OrganizerPage = () => {\r\n  const [pairs, setPairs] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [preferance, setPreferance] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [generatedPairs, setGeneratedPairs] = useState([]);\r\n\r\n  const generatePairs = () => {\r\n    const shuffledPairs = shuffle(pairs);\r\n    const submitPairs = [];\r\n\r\n    shuffledPairs.forEach((el, i) => {\r\n      let pair;\r\n      if (i === 0) {\r\n        pair = encode(shuffledPairs[shuffledPairs.length - 1], \"secret\");\r\n      } else {\r\n        pair = encode(shuffledPairs[i - 1], \"secret\");\r\n      }\r\n\r\n      const url = generateUrl(el.name, pair);\r\n\r\n      submitPairs.push({ ...el, url });\r\n    });\r\n\r\n    setGeneratedPairs(shuffle(submitPairs));\r\n    setShowModal(true);\r\n  };\r\n\r\n  const generateUrl = (name, pairToken) =>\r\n    `${window.location.href}?name=${name}&pairToken=${pairToken}`;\r\n\r\n  const shuffle = (arr) => {\r\n    const copy = cloneDeep(arr);\r\n    let currentIndex = copy.length;\r\n    let randomIndex;\r\n\r\n    while (currentIndex !== 0) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n\r\n      [copy[currentIndex], copy[randomIndex]] = [\r\n        copy[randomIndex],\r\n        copy[currentIndex],\r\n      ];\r\n    }\r\n\r\n    return copy;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const pairsCopy = cloneDeep(pairs);\r\n\r\n    pairsCopy.push({\r\n      name,\r\n      preferance,\r\n    });\r\n\r\n    setPairs(pairsCopy);\r\n    setName(\"\");\r\n    setPreferance(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"organizer-container\">\r\n        <div className=\"pairs-container\">\r\n          {pairs.map((pair, i) => (\r\n            <div key={`pair${i}`}>\r\n              <p className=\"name\">{pair.name}</p>\r\n              <p className=\"preferance\">{pair.preferance}</p>\r\n              <button\r\n                onClick={() => {\r\n                  let tempArr = cloneDeep(pairs);\r\n                  tempArr.splice(i, 1);\r\n                  setPairs(tempArr);\r\n                }}\r\n              >\r\n                x\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            handleSubmit();\r\n          }}\r\n        >\r\n          <div className=\"input-container\">\r\n            <input\r\n              onChange={(e) => setName(e.currentTarget.value)}\r\n              value={name}\r\n              placeholder=\"Name\"\r\n            />\r\n            <input\r\n              placeholder=\"Preferances\"\r\n              onChange={(e) => setPreferance(e.currentTarget.value)}\r\n              value={preferance}\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n        <button id=\"generate-button\" onClick={generatePairs}>\r\n          Generate Pairs\r\n        </button>\r\n      </div>\r\n      <PairsModal\r\n        show={showModal}\r\n        data={generatedPairs}\r\n        handleClose={() => setShowModal(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrganizerPage;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport decode from \"jwt-decode\";\r\n\r\nconst ParticipantPage = () => {\r\n  const [participantObj, setParticipantObj] = useState({});\r\n\r\n  useEffect(() => {\r\n    const str = window.location.search;\r\n    const objURL = {};\r\n\r\n    str.replace(\r\n      new RegExp(\"([^?=&]+)(=([^&]*))?\", \"g\"),\r\n      function ($0, $1, $2, $3) {\r\n        objURL[$1] = $3;\r\n      }\r\n    );\r\n\r\n    const decoded = decode(objURL.pairToken);\r\n\r\n    setParticipantObj({ participantName: objURL.name, ...decoded });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"participant-container\">\r\n      {participantObj.name && (\r\n        <div className={\"participant-card\"}>\r\n          <h2>\r\n            Hi {participantObj.participantName.split(\" \")[0]}! You're buying\r\n            beers for\r\n          </h2>\r\n          <p>{participantObj.name}</p>\r\n          <span>Their preferences: {participantObj.preferance}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ParticipantPage;\r\n","export default __webpack_public_path__ + \"static/media/santa-with-beer.d3c6e103.png\";","import OrganizerPage from \"./organizerPage\";\nimport ParticipantPage from \"./participantPage\";\nimport santaImg from \"../styles/assets/santa-with-beer.png\";\n\nconst App = () => (\n  <>\n    <div className=\"snow\">\n      {[...Array(500)].map((_, i) => (\n        <div key={`flake-${i}`} className=\"snowflake\" />\n      ))}\n    </div>\n    {window.location.search.length ? <ParticipantPage /> : <OrganizerPage />}\n    <img id=\"santa\" alt=\"santa with beer\" src={santaImg} />\n    <a className=\"git-link\" href=\"https://github.com/tyler7771\">\n      Created with love by Tyler Fields! Check out my Github. Cheers!\n    </a>\n  </>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./styles/index.scss\";\n\nimport App from \"./Components/App.jsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}